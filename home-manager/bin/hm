#!/usr/bin/env bash

if (return 0 2>/dev/null); then
  >&2 echo  -e "\e[31mThis script should not be sourced.\e[0m"
  return 1
fi
set -euo pipefail

_hm () {
  if grep '[Mm]icrosoft' /proc/version -q &> /dev/null; then
    local wsl=true
  else
    local wsl=false
  fi
  if [ "`grep ^ID= /etc/os-release | cut -d'=' -f2`" == nixos ]; then
    local is_nixos=true
  else
    local is_nixos=false
  fi
  if ! [ -v BASIC_SETUP ]; then
    local basic_setup=false
  else
    if [ "$BASIC_SETUP" == 'true' ]; then
      local basic_setup=true
    else
      local basic_setup=false
    fi
  fi
  local product_name
  if [ -f /sys/devices/virtual/dmi/id/product_name ]; then
    local product_name
    product_name=`cat /sys/devices/virtual/dmi/id/product_name`
    if [ "$product_name" == "VirtualBox" ]; then
      local is_virtualbox=true
    else
      local is_virtualbox=false
    fi
  else
    local is_virtualbox=false
  fi
  # available profiles: giggio, giggio_wsl, giggio_virtualbox_nixos, giggio_nixos, giggio_basic, giggio_wsl_basic, giggio_virtualbox_basic, giggio_virtualbox_nixos_basic, giggio_nixos_basic
  local profile=giggio
  if $wsl; then
    profile+=_wsl
  else
    if $is_virtualbox; then
      profile+=_virtualbox
    fi
    if $is_nixos; then
      profile+=_nixos
    fi
  fi
  if $basic_setup; then profile+='_basic'; fi
  local args=("$@")
  local get_profile=false
  local verbose=false
  while [[ $# -gt 0 ]]; do
    case "$1" in
      --verbose)
      verbose=true
      shift
      ;;
      --get-profile)
      get_profile=true
      shift
      ;;
      *)
      shift
      ;;
    esac
  done
  if $get_profile; then
    echo $profile
    return
  fi
  if $verbose; then
    echo -e "\e[32mRunning:\e[0m \e[34m`readlink -f "$0"`\e[0m --flake $HOME/.dotfiles/home-manager?submodules=1#$profile ${args[*]}"
  fi
  home-manager --flake "$HOME/.dotfiles/home-manager?submodules=1#$profile" "${args[@]}"
}

_hm "$@"
