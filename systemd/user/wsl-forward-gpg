#!/usr/bin/env bash

set -euo pipefail

function gpg_agent_running() {
  run_in_win_path powershell.exe -noprofile -NonInteractive -c 'Get-Process gpg-agent -ErrorAction SilentlyContinue | Out-Null' \
    || run_in_win_path gpg-connect-agent.exe /bye
}

function forward_gpg() {
  # gpg relay to Windows
  # see https://github.com/Lexicality/wsl-relay/blob/main/scripts/gpg-relay
  # wsl-relay.exe should be in PATH on the Windows file system
  # related:
  # * https://blog.nimamoh.net/yubi-key-gpg-wsl2/
  # * https://justyn.io/blog/using-a-yubikey-for-gpg-in-wsl-windows-subsystem-for-linux-on-windows-10/
  # This allows for `gpg --card-status` to work
  # see https://support.yubico.com/hc/en-us/articles/360013790259-Using-Your-YubiKey-with-OpenPGP to view how to export a key to yubikey
  LOCALAPPDATA=`windows_env_var LOCALAPPDATA`
  local wsl_relay
  if ! pgrep --full 'wsl-relay.*--gpg,' &> /dev/null; then
    AGENT_SOCKET_FILE=`gpgconf --list-dir | grep --color=never agent-socket | cut -d: -f2`
    rm -f "$AGENT_SOCKET_FILE"
    wsl_relay=`find_in_win_path wsl-relay.exe`
    if [ "$wsl_relay" != '' ]; then
    # if hash wsl-relay.exe 2>/dev/null && hash gpg-connect-agent.exe 2>/dev/null; then
      if gpg_agent_running; then
        if [ -f "$LOCALAPPDATA/gnupg/S.gpg-agent" ]; then
          socat UNIX-LISTEN:"$AGENT_SOCKET_FILE",fork, EXEC:"$wsl_relay --input-closes --pipe-closes --gpg",nofork &
        fi
      fi
    fi
  fi
  if ! pgrep --full 'wsl-relay.*--gpg=S.gpg-agent.extra,' &> /dev/null; then
    AGENT_EXTRA_SOCKET_FILE=`gpgconf --list-dir | grep --color=never agent-extra-socket | cut -d: -f2`
    rm -f "$AGENT_EXTRA_SOCKET_FILE"
    wsl_relay=`find_in_win_path wsl-relay.exe`
    if [ "$wsl_relay" != '' ]; then
    # if hash wsl-relay.exe 2>/dev/null && hash gpg-connect-agent.exe 2>/dev/null; then
      if gpg_agent_running; then
        if [ -f "$LOCALAPPDATA/gnupg/S.gpg-agent.extra" ]; then
          socat UNIX-LISTEN:"$AGENT_EXTRA_SOCKET_FILE",fork, EXEC:"$wsl_relay --input-closes --pipe-closes --gpg=S.gpg-agent.extra",nofork &
        fi
      fi
    fi
  fi
}

function ensure_gpg_ssh_agent() {
  local cmd
  if run_in_win_path cmd.exe /c 'dir \\.\pipe\\openssh-ssh-agent' &>/dev/null; then
    return 0
  else
    # start gpg agent in Windows
    if gpg_agent_running; then
      if $cmd /c 'dir \\.\pipe\\openssh-ssh-agent' &>/dev/null; then
        return 0
      fi
    fi
  fi
  return 1
}

function forward_ssh() {
  local SSH_AUTH_SOCK=/tmp/ssh_agent_socket
  if pgrep --full npiperelay &>/dev/null; then
    if ensure_gpg_ssh_agent; then
      export SSH_AUTH_SOCK
    fi
  else
    local npiperelay
    npiperelay=`find_in_win_path npiperelay.exe`
    if [ "$npiperelay" != '' ]; then
      if gpg_agent_running; then
        socat UNIX-LISTEN:"$SSH_AUTH_SOCK",unlink-close,unlink-early,group=giggio,mode=775,fork EXEC:"$npiperelay -ei -s //./pipe/openssh-ssh-agent",nofork &
        export SSH_AUTH_SOCK
      fi
    fi
  fi
}

function find_in_win_path () {
  if ! [ -v 1 ]; then return 1; fi
  binary=$1
  cd /mnt/c
  path=`/mnt/c/Windows/System32/cmd.exe /c "where.exe $binary 2> NUL" | head -n1 | awk '{gsub(/\r$/,"")} {print $0}'`
  if [ "$path" != '' ]; then
    wslpath "$path"
  fi
}

function run_in_win_path () {
  if ! [ -v 1 ]; then return 1; fi
  binary=$1
  shift
  path=`find_in_win_path "$binary"`
  if [ "$path" == '' ]; then return 1; fi
  "$path" "$@"
}

function windows_env_var() {
  pushd /mnt/c > /dev/null
  wslpath "$(/mnt/c/Windows/System32/cmd.exe /c 'echo|set /p=%'"$1"'%' 2> /dev/null)"
  popd > /dev/null
}

forward_gpg

forward_ssh

wait
